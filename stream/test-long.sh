#!/usr/bin/env bash

http --pretty colors localhost:7100/stream_edits <<'EOF'
{
  "outline": "```lua/ask-openai/prediction/tests/calc/calc.lua\nclass BigThing\nfunction M.add\nfunction M.sub\nfunction M.mul\nfunction M.div\n```",
  "input_events": "User edited \"lua/ask-openai/prediction/tests/calc/calc.lua\":\n```diff\n@@ -1,0 +1,20 @@\n+local BigThing = {}\n+\n+function BigThing.new(name)\n+    return setmetatable({\n+        name = name,\n+        data = {},\n+    }, { __index = BigThing })\n+end\n+\n+function BigThing:reset()\n+    self.data = {}\n+end\n+\n+function BigThing:add_entry(key, value)\n+    self.data[key] = value\n+end\n+\n+function BigThing:summary()\n+    return string.format(\"BigThing[%s] has %d items\", self.name, #self.data)\n+end\n\n```diff\n@@ -7,4 +27,11 @@\n \n \n \n+function M.sub(a, b)\n+    return a - b\n+end\n+\n+function M.mul(a, b)\n+    return a * b\n+end\n+\n+\n return M\n```\n\nUser edited \"lua/ask-openai/prediction/tests/calc/calc.lua\":\n```diff\n@@ -33,4 +40,9 @@\n+\n+function M.div(a, b)\n+    if b == 0 then\n+        return nil, \"divide by zero\"\n+    end\n+    return a / b\n+end\n\n return M\n```",
  "input_excerpt": "```ask-openai.nvim/lua/ask-openai/prediction/tests/calc/calc.lua\n<|start_of_file|>\n<|editable_region_start|>\nlocal BigThing = {}\n\nfunction BigThing.new(name)\n    return setmetatable({\n        name = name,\n        data = {},\n    }, { __index = BigThing })\nend\n\nfunction BigThing:reset()\n    self.data = {}\nend\n\nfunction BigThing:add_entry(key, value)\n    self.data[key] = value\nend\n\nfunction BigThing:summary()\n    return string.format(\"BigThing[%s] has %d items\", self.name, #self.data)\nend\n\n\nlocal M = {}\n\nfunction M.add(a, b)\n    return a + b\nend\n\n\nfunction M.sub(a, b)\n    return a - b\nend\n\nfunction M.mul(a, b)\n    return a * b\nend\n\n\nfunction M.div(a, b)\n    if b == 0 then\n        return nil, \"divide by zero\"\n    end\n    return a / b\nend\n\n\n<|user_cursor_is_here|>\nreturn M\n<|editable_region_end|>\n```",
  "speculated_output": "<|editable_region_start|>\nlocal BigThing = {}\n\nfunction BigThing.new(name)\n    return setmetatable({\n        name = name,\n        data = {},\n    }, { __index = BigThing })\nend\n\nfunction BigThing:reset()\n    self.data = {}\nend\n\nfunction BigThing:add_entry(key, value)\n    self.data[key] = value\nend\n\nfunction BigThing:summary()\n    return string.format(\"BigThing[%s] has %d items\", self.name, #self.data)\nend\n\n\nlocal M = {}\n\nfunction M.add(a, b)\n    return a + b\nend\n\n\nfunction M.sub(a, b)\n    return a - b\nend\n\nfunction M.mul(a, b)\n    return a * b\nend\n\n\nfunction M.div(a, b)\n    if b == 0 then\n        return nil, \"divide by zero\"\n    end\n    return a / b\nend\n\n\n<|user_cursor_is_here|>\nreturn M\n<|editable_region_end|>",
  "can_collect_data": false,
  "diagnostic_groups": [],
  "include_finish_reason": true
}
EOF
